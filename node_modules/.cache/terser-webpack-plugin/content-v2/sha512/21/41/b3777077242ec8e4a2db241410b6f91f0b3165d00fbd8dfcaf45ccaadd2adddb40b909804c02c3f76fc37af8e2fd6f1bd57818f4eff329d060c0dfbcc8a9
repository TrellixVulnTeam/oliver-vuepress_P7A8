{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{524:function(t,s,a){\"use strict\";a.r(s);var n=a(9),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"简介\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#简介\"}},[t._v(\"#\")]),t._v(\" 简介\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"code\",[t._v(\"Synchronized\")]),t._v(\"   是 Java中的关键字，其目的：为了保证同一时刻只能被一个线程使用。\\n同时  \"),a(\"code\",[t._v(\"Synchronized\")]),t._v(\"   作为一个 \"),a(\"code\",[t._v(\"内部锁\")]),t._v(\" ，它保障原子性、可见性、有序性\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"注\")])]),t._v(\"  在 Java 早期版本中，synchronized 属于 \"),a(\"strong\",[t._v(\"重量级锁\")]),t._v(\"，效率低下。 常被人说【synchronized好用，简单，性能不差】\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"使用方式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用方式\"}},[t._v(\"#\")]),t._v(\" 使用方式\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"Synchronized\")]),t._v(\"  有三种使用方式：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"修饰实例方法:   锁作用在 当前对象\")]),t._v(\" \"),a(\"li\",[t._v(\"修饰静态方法： 锁作用在 当前对象的类\")]),t._v(\" \"),a(\"li\",[t._v(\"修饰代码块:  可以指定锁在 对象  或  类\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SynchronizedDemo\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 同步方法 - 给 当前对象加锁\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello world\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 同步静态方法 给 对象的 class 类 进行加锁\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello world\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 同步代码块 可以指定 对象 或 类 进行加锁\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello world\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SynchronizedDemo\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello world\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"锁实现原理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#锁实现原理\"}},[t._v(\"#\")]),t._v(\" 锁实现原理\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"通过 反编译后，可以看出 JVM 使用两种不同的方式实现同步操作\\n同步方法：  JVM 采用 \"),a(\"code\",[t._v(\"ACC_SYNCHRONIZED\")]),t._v(\"  标识符来实现同步\\n同步代码块： JVM 采用 \"),a(\"code\",[t._v(\"monitorenter\")]),t._v(\" 、 \"),a(\"code\",[t._v(\"monitorexit\")]),t._v(\"  两个指令来实现同步\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  descriptor\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"V\")]),t._v(\"\\n  flags\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" ACC_PUBLIC\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" ACC_SYNCHRONIZED\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Code\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"\\n    stack\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" locals\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" args_size\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" getstatic     #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Field java/lang/System.out:Ljava/io/PrintStream;\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" ldc           #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// String hello world\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" invokevirtual #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Method java/io/PrintStream.println:(Ljava/lang/String;)V\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"LineNumberTable\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"\\n      line \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n      line \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  descriptor\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"V\")]),t._v(\"\\n  flags\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" ACC_PUBLIC\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" ACC_STATIC\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" ACC_SYNCHRONIZED\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Code\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"\\n    stack\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" locals\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" args_size\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" getstatic     #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Field java/lang/System.out:Ljava/io/PrintStream;\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" ldc           #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// String hello world\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" invokevirtual #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Method java/io/PrintStream.println:(Ljava/lang/String;)V\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"LineNumberTable\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"\\n      line \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n      line \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"11\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"doMethod3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  descriptor\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"V\")]),t._v(\"\\n  flags\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" ACC_PUBLIC\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Code\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"\\n    stack\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" locals\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" args_size\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" aload_0\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" dup\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" astore_1\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" monitorenter\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" getstatic     #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Field java/lang/System.out:Ljava/io/PrintStream;\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"7\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" ldc           #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// String hello world\")]),t._v(\"\\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"9\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" invokevirtual #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Method java/io/PrintStream.println:(Ljava/lang/String;)V\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"12\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" aload_1\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"13\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" monitorexit\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"14\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"goto\")]),t._v(\"          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"22\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"17\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" astore_2\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"18\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" aload_1\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"19\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" monitorexit\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" aload_2\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"21\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" athrow\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"22\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" ldc           #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// class SynchronizedDemo\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"24\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" dup\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"25\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" astore_1\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"26\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" monitorenter\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"27\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" getstatic     #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Field java/lang/System.out:Ljava/io/PrintStream;\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" ldc           #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// String hello world\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"32\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" invokevirtual #\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\"                  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Method java/io/PrintStream.println:(Ljava/lang/String;)V\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"35\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" aload_1\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"36\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" monitorexit\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"37\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"goto\")]),t._v(\"          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"45\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" astore_3\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"41\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" aload_1\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"42\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" monitorexit\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"43\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" aload_3\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"44\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" athrow\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"45\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\"\\n\\n\")])])]),a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"注\")])]),t._v(\"   无论是 ACC_SYNCHRONIZED 还是 monitorenter、monitorexit都是基于Monitor实现的，在Java虚拟机(HotSpot)中，Monitor是基于C++实现的，由ObjectMonitor实现。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"monitor-主要数据结构如下：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#monitor-主要数据结构如下：\"}},[t._v(\"#\")]),t._v(\" Monitor 主要数据结构如下：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"ObjectMonitor\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  _header       \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" NULL\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  _count        \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 记录个数\")]),t._v(\"\\n  _waiters      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  _recursions   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 线程的重入次数\")]),t._v(\"\\n  _object       \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" NULL\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 存储 Monitor 对象\")]),t._v(\"\\n  _owner        \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" NULL\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 持有锁的 当前线程\")]),t._v(\"\\n  _WaitSet      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" NULL\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 处于 wait 状态的线程，会被加入到 _WaitSet\")]),t._v(\"\\n  _WaitSetLock  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  _Responsible  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" NULL \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  _succ         \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" NULL \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  _cxq          \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" NULL \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 单向列表\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"FreeNext\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" NULL \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  _EntryList    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" NULL \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 处于等待锁 block 状态的线程，会被加入到该列表\")]),t._v(\"\\n  _SpinFreq     \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  _SpinClock    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"OwnerIsThread\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  _previous_owner_tid \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"同步方法-什么时候获取锁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#同步方法-什么时候获取锁\"}},[t._v(\"#\")]),t._v(\" 同步方法 什么时候获取锁\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"检测 是否 有 \"),a(\"code\",[t._v(\"ACC_SYNCHRONIZED\")]),t._v(\" 标识,需要先获取监视器锁，然后在开始执行方法，方法执行完成后在释放监视器锁\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"注\")])]),t._v(\"  其他线程来请求执行时，无法获得监视器锁而被阻断\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"同步方法-什么时候释放锁：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#同步方法-什么时候释放锁：\"}},[t._v(\"#\")]),t._v(\" 同步方法 什么时候释放锁：\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"方法执行完成后在释放监视器锁\")]),t._v(\" \"),a(\"li\",[t._v(\"当出现异常时，方法内没有处理异常，就会在抛出异常之前，监视器锁会被释放\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"同步代码块-什么时候获取锁？什么时候释放锁？\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#同步代码块-什么时候获取锁？什么时候释放锁？\"}},[t._v(\"#\")]),t._v(\" 同步代码块 什么时候获取锁？什么时候释放锁？\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"monitorenter ： 指令理解为加锁\")]),t._v(\" \"),a(\"li\",[t._v(\"monitorexit:        指令理解为解锁\")])]),t._v(\" \"),a(\"p\",[t._v(\"原理：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"每个对象自身维护这一个加锁的计数器\")]),t._v(\" \"),a(\"li\",[t._v(\"当线程 获取到锁 则对计数器 +1  （同一个线程可以多次获取该对象的锁）\")]),t._v(\" \"),a(\"li\",[t._v(\"当线程 释放锁 则对计数器 -1\")]),t._v(\" \"),a(\"li\",[t._v(\"当计数器 自减到 0 是，锁将被释放，其他线程可以进行获取锁\")])]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://www.hollischuang.com/archives/2030\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Moniter 实现原理\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"h2\",{attrs:{id:\"三特性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三特性\"}},[t._v(\"#\")]),t._v(\" 三特性\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"原子性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#原子性\"}},[t._v(\"#\")]),t._v(\" 原子性\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"一个操作不可中断的，要么全部执行完成、要么就都不执行\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"Synchronized\")]),t._v(\"   通过 \"),a(\"code\",[t._v(\"monitorenter\")]),t._v(\" 和 \"),a(\"code\",[t._v(\"monitorexit\")]),t._v(\"指令，可以保证被synchronized修饰的代码在同一时间只能被一个线程访问，在锁未释放之前，无法被其他线程访问到。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"例\")])])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"线程1在执行\"),a(\"code\",[t._v(\"monitorenter\")]),t._v(\"指令的时候，会对\"),a(\"code\",[t._v(\"Monitor\")]),t._v(\"进行加锁，加锁后其他线程无法获得锁，除非线程1主动解锁。即使在执行过程中，由于某种原因，比如CPU时间片用完，线程1放弃了CPU，但是，他并没有进行解锁。而由于\"),a(\"code\",[t._v(\"synchronized\")]),t._v(\" 的锁是可重入的，下一个时间片还是只能被他自己获取到，还是会继续执行代码。直到所有代码执行完。这就保证了原子性\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"可见性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#可见性\"}},[t._v(\"#\")]),t._v(\" 可见性\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看得到修改的值\")])]),t._v(\" \"),a(\"p\",[t._v(\"synchronized又是如何保障可见性的呢？\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"核心\")])]),t._v(\" \"),a(\"code\",[t._v(\"Synchronized\")]),t._v(\"  关键字锁住的是对象，其值是具有可见性的\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"JAVA内存模型：\\n\"),a(\"ul\",[a(\"li\",[t._v(\"规定了所有的变量存储在主内存中，每个线程都要维护一个工作内存，使用变量时，会将主内存变量拷贝到工作内存中，改变变量值，也是对工作内存中进行改变。在不主动 与 主内存之间进行数据同步时，其他线程对变量的值是不可见的\")])])]),t._v(\" \"),a(\"li\",[t._v(\"Synchronized 执行机制 ：\\n\"),a(\"ul\",[a(\"li\",[t._v(\"为了保证可见性， 在释放锁之前，必须先把变量同步到主内存中，后续的线程访问到的就是被修改后的值\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"有序性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#有序性\"}},[t._v(\"#\")]),t._v(\" 有序性\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"程序执行的顺序按照代码的先后顺序执行\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"注\")])]),t._v(\" \"),a(\"code\",[t._v(\"Synchroized\")]),t._v(\"  是  无法像 \"),a(\"code\",[t._v(\"volatile\")]),t._v(\"  通过使用 \"),a(\"code\",[t._v(\"内存屏障\")]),t._v(\" 进行 禁止指令重排 和 处理器优化的\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"为什么还说synchronized也提供了有序性保证呢？\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"基于 \"),a(\"code\",[t._v(\"as-if-serial\")]),t._v(\"  语义 :  保证了 单线程中 指令重排是有一定的限制的，只要编译器和处理器遵循这个语义，那么就可以任务单线程执行时 按照顺序执行的\")]),t._v(\" \"),a(\"li\",[t._v(\"基于 \"),a(\"code\",[t._v(\"synchronized\")]),t._v(\"  修饰的代码是 \"),a(\"code\",[t._v(\"原子性\")]),t._v(\" 的，同一时间只能被同一个线程访问，也就是 \"),a(\"code\",[t._v(\"单线程\")]),t._v(\" 执行\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"锁优化\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#锁优化\"}},[t._v(\"#\")]),t._v(\" 锁优化\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"Java 1.6 之前 \"),a(\"code\",[t._v(\"Synchronized\")]),t._v(\"  只存在，无锁、重量锁\")]),t._v(\" \"),a(\"li\",[t._v(\"Java 1.6 之后 对其进行了锁的优化 无锁、偏向锁、轻量锁、重量锁\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"java对象头\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#java对象头\"}},[t._v(\"#\")]),t._v(\" Java对象头\")]),t._v(\" \"),a(\"p\",[t._v(\"JDK1.6 JVM 对象实现堆内存分为三部分：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"对象头\")]),t._v(\" \"),a(\"li\",[t._v(\"实例数据\")]),t._v(\" \"),a(\"li\",[t._v(\"对其填充\")])]),t._v(\" \"),a(\"p\",[t._v(\"对象头中有分为三部分：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"Mark Word\\n\"),a(\"ul\",[a(\"li\",[t._v(\"Mark Word 记录了对象和锁有关的信息\")])])]),t._v(\" \"),a(\"li\",[t._v(\"指向类的指针\")]),t._v(\" \"),a(\"li\",[t._v(\"数组长度\")])]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/java/concurrent/synchronized/1.png\"),alt:\"foo\"}}),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/java/concurrent/synchronized/2.png\"),alt:\"foo\"}}),t._v(\" \"),a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"核心\")])]),t._v(\"   锁升级主要依赖于 Mark Word中的 锁标志位 和 释放偏向锁的标志位\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"无锁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#无锁\"}},[t._v(\"#\")]),t._v(\" 无锁\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"默认状态是无锁的。无锁没有对资源进行锁定，所有的线程都能访问并修改同一个资源，但同时只有一个线程能修改成功。 即 没用 \"),a(\"code\",[t._v(\"Synchornized\")]),t._v(\"  修饰的代码块都是无锁的\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"偏向锁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#偏向锁\"}},[t._v(\"#\")]),t._v(\" 偏向锁\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"当没有竞争出现时，默认会使用偏向锁。JVM 会利用 CAS 操作，在对象头上的 Mark Word 部分设置> 线程 ID以表示这个对象偏向于当前线程，所以并不涉及真正的互斥锁。这样做的假设是基于在很多应用场景中，大部分对象生命周期中最多会被一个线程锁定，使用偏斜锁可以降低无竞争开销\")])]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/java/concurrent/synchronized/3.png\"),alt:\"foo\"}}),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"升级的过程： 进程进入同步代码块时，会利用 CAS 将 Markwork 进行标识\\n\"),a(\"ul\",[a(\"li\",[t._v(\"线程ID\")]),t._v(\" \"),a(\"li\",[t._v(\"锁状态标识：01\")]),t._v(\" \"),a(\"li\",[t._v(\"是否偏向： 1\")])])]),t._v(\" \"),a(\"li\",[t._v(\"膨胀过程：当有另外线程进入，偏向锁会升级成轻量级锁。比如线程A是偏向锁，这是B线程进入，就会成轻量级锁，\"),a(\"strong\",[t._v(\"只要有两个线程就会升级成轻量级锁\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"轻量级锁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#轻量级锁\"}},[t._v(\"#\")]),t._v(\" 轻量级锁\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"多个线程竞争同步资源时，没有获取资源的线程自旋等待锁释放\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"升级过程：在线程运行获取锁后，会在栈帧中创造锁记录并将MarkWord复制到锁记录，然后将MarkWord指向锁记录，如果当前线程持有锁，其他线程再进入，此时其他线程会cas自旋，直到获取锁，轻量级锁适合多线程交替执行，效率高（cas只消耗cpu，我在cas原理一篇文章中详细讲过。）。\")]),t._v(\" \"),a(\"li\",[t._v(\"膨胀过程：有两种情况会膨胀成重量级锁。\\n\"),a(\"ul\",[a(\"li\",[t._v(\"1、cas自旋10次还没获取锁。\")]),t._v(\" \"),a(\"li\",[t._v(\"2、其他线程正在cas获取锁，第三个线程竞争获取锁，锁也会膨胀变成重量级锁。\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"重量级锁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#重量级锁\"}},[t._v(\"#\")]),t._v(\" 重量级锁\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"重量锁\")])]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/java/concurrent/synchronized/4.png\"),alt:\"foo\"}}),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/java/concurrent/synchronized/5.png\"),alt:\"foo\"}}),t._v(\" \"),a(\"h2\",{attrs:{id:\"锁消除\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#锁消除\"}},[t._v(\"#\")]),t._v(\" 锁消除\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"在使用synchronized的时候，如果JIT经过逃逸分析之后发现并无线程安全问题的话，就会做锁消除。\")])]),t._v(\" \"),a(\"p\",[t._v(\"锁消除：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"逃逸分析：即: JIT 比编译器 借助 逃逸分析 来判断同步快所使用的锁对象是否只能够被一个线程访问\")]),t._v(\" \"),a(\"li\",[t._v(\"如果是的话 JIT编译器 在编译这个同步代码块的时候就会取消这部分代码的同步\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"例\")])])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 优化前\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"f\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),t._v(\" oliver \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"oliver\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"oliver\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 优化后\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"f\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),t._v(\" oliver \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"oliver\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"锁粗化\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#锁粗化\"}},[t._v(\"#\")]),t._v(\" 锁粗化\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"如果在一段代码中连续的对同一个对象反复加锁解锁，其实是相对耗费资源的，这种情况可以适当放宽加锁的范围，减少性能消耗。\")]),t._v(\" \"),a(\"li\",[t._v(\"当JIT发现一系列连续的操作都对同一个对象反复加锁和解锁，甚至加锁操作出现在循环体中的时候，会将加锁同步的范围扩散（粗化）到整个操作序列的外部。\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[t._v(\"# 粗化前\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"100000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"  \\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"  \\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"do\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"  \\n\\n# 粗化后    \\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"100000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"  \\n       \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"do\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"疑问点：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#疑问点：\"}},[t._v(\"#\")]),t._v(\" 疑问点：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"锁降级\")])])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}