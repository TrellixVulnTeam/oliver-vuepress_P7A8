(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{552:function(s,t,a){"use strict";a.r(t);var e=a(9),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("类似与 Java语言中的 LinkedList")]),s._v(" "),a("p",[s._v("增加和删除操作非常快 时间复杂度 O(1), 可以提供高效的 "),a("code",[s._v("节点排序能力")]),s._v(" 以及 "),a("code",[s._v("顺序节点访问方式")])])]),s._v(" "),a("p",[s._v("List的底层实现：")]),s._v(" "),a("p",[s._v("Redis 3.2 之前:")]),s._v(" "),a("ul",[a("li",[s._v("双向链表 （adlist）")]),s._v(" "),a("li",[s._v("压缩链表 （ziplist）")])]),s._v(" "),a("p",[s._v("Redis 3.2 之后：")]),s._v(" "),a("ul",[a("li",[s._v("快速链表 （quicklist）")])]),s._v(" "),a("h2",{attrs:{id:"基本结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本结构"}},[s._v("#")]),s._v(" 基本结构")]),s._v(" "),a("img",{attrs:{src:s.$withBase("/middleware/redislearn/Reids链表.png"),alt:"foo"}}),s._v(" "),a("div",{staticClass:"language-C extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("listNode")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 前置节点    ")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("listNode")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" prev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 后置节点   ")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("listNode")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 节点的值    ")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" listNode\n")])])]),a("img",{attrs:{src:s.$withBase("/middleware/redislearn/redisList.png"),alt:"foo"}})])}),[],!1,null,null,null);t.default=n.exports}}]);